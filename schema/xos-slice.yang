module xos-slice {
  namespace "urn:ietf:params:xml:ns:yang:xos-slice";
  prefix xslice;
  yang-version 1.1;

  import ietf-yang-types { prefix yang; }
  import ietf-inet-types { prefix inet; }
  import xos-core        { prefix xos; }
  import xos-types       { prefix xtype; }

  organization
   "Open Networking Lab (XOS) / Corenova Technologies";

  contact
    "Larry Peterson <llp@onlab.us>
     Peter K. Lee <peter@corenova.com>";
  
  description
   "This module contains a collection of Slice and related models for XOS.

    Copyright (c) 2016 ON.LAB and the persons identified as authors of
    the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, is permitted pursuant to, and subject to the license
    terms of the Apache License, Version 2.0 which accompanies this
    distribution, and is available at
    (http://www.apache.org/licenses/LICENSE-2.0).";
  
  revision 2016-09-13 {
    description "Initial revision.";
  }

  grouping slice {
    description 
      "A slice is a logically centralized container for network and compute resources";

    uses xos:provider {
      refine "name" { description "Name of the Slice"; }
    }
    leaf slice-url {
      description "A URL describing the purpose of this slice";
      type xtype:url-field; 
      // blank true;
    }
    leaf max-instances {
      description "The maximum number of VMs that this slice is allowed to allocate";
      type uint32;
    } 
    leaf service {
      description "The service that runs in this slice";
      type xtype:service;
    }
    leaf network {
      description "The network that the slice uses to connect to other slices and to the Internet.";
      type enumeration {
        enum none;
        enum host;
        enum bridged;
        enum noauto;
        default none;
      }
    }
    leaf-leaf ports {
      description "The ports to be exposed for other slices to connect to";
      type uint16;
    }

    leaf creator {
      type xtype:user;
    }

    leaf default-flavor {
      type xtype:flavor;
    }

    leaf default-image {
      type xtype:image;
    }

    leaf default-node {
      type xtype:node;
    } 

    leaf mount-data-sets {
      type string {
        length 0..256; 
      }
      default "GenBank";
    } 

    leaf default_isolation {
      type enumeration {
        enum vm     { description 'Virtual Machine'; }
        enum lxc    { description 'Container'; }
        enum hybrid { description 'Container in Virtual Machine'; }
      }
      type string {
        length 0..30;
      }
      default "vm";
    } 

    leaf-list tags {
      // below leafref is not valid since there is no /tag
      type leafref {
        path "/tag[id = current()/../id]/id";
      }
    }
    // below are deprecated and should not be used
    leaf omf-friendly {
      type boolean;
      default false;
      status deprecated;
    }
    leaf service-class {
      type xtype:service-class;
      status deprecated;
    }
  }
  grouping slice-privilege {
    uses xos-base;
    leaf user { 
      type xtype:user; 
    }
    leaf slice { 
      type xtype:slice; 
    }
    leaf role { 
      type xtype:role; 
    }
  }
  grouping slice-credential {
    uses xos-base;
    leaf slice { 
      type xtype:slice; 
    }
    
    leaf key-id { 
      type string;
    }
    leaf enc-value { 
      type xtype:encrypted-string;
    }
  }
  grouping instance {
    uses xos-base;
    container synchronizer {
      if-feature synchronizer {
        leaf instance-id { 
          type string;
        }

        leaf instance-uuid { 
          type string;
        }
        
        leaf instance-name { 
          type string;
        }

        leaf ip { 
          type inet:ip-address;
        }
    }
    leaf image { 
      type xtype:image; 
    }
    leaf creator { 
      type xtype:creator; 
    }
    leaf slice { 
      type xtype:slice; 
    }
    leaf deployment { 
      type xtype:deployment; 
    }
    leaf node { 
      type xtype:node; 
    }
    leaf number-cores { 
      type uint32;
    }
    leaf flavor { 
      type xtype:flavor; 
    }
    leaf user-data { 
      type string;
    }
    leaf isolation { 
      type string;
    }
    leaf volumes { 
      type string;
    }
    leaf parent { 
      type xtype:parent; 
    }
  }
  grouping network-slice {
    uses xos-base;
    leaf network { 
      type xtype:network; 
    }

    leaf slice { 
      type xtype:slice; 
    }
  }
  grouping slice-role {
    uses xos-base;
    leaf role { 
      type string;
    }
  }

  grouping slice-tag {
    uses xos-base;
    leaf slice { 
      type xtype:slice; 
    }
    
    leaf value { 
      type string;
    }
  }
  grouping flavor {
    uses xos-base;
    
    leaf description { 
      type string;
    }
    leaf flavor { 
      type string;
    }
    leaf order { 
      type uint32;
    }
    leaf default { 
      type boolean;
    }
  }
  grouping image {
    uses xos-base;

    
    leaf kind { 
      type string;
    }
    leaf disk-format { 
      type string;
    }
    leaf container-format { 
      type string;
    }
    leaf path { 
      type string;
    }
    leaf tag { 
      type string;
    }
  }
  grouping image-deployments {
    uses xos-base;
    leaf image { 
      type xtype:image; 
    }
    leaf deployment { 
      type xtype:deployment; 
    }
  }
  grouping reservation {
    uses xos-base;
    leaf start-time { 
      type xtype:datetime;
    }
    leaf slice { 
      type xtype:slice; 
    }
    leaf duration { 
      type uint32;
    }
  }
  grouping reserved-resource {
    uses xos-base;
    leaf instance { 
      type xtype:instance; 
    }
    leaf resource { 
      type xtype:resource; 
    }
    leaf quantity { 
      type uint32;
    }
    leaf reservationSet { 
      type xtype:reservationSet; 
    }
  }
}
