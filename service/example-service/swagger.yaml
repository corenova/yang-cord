swagger: '2.0'
info:
  title: Example Service Controller
  description: |
    YANG model-driven Example Service Controller for CORD
  version: '1.0'
  contact:
    name: Peter Lee
    url: 'http://github.com/corenova/yang-cord'
    email: peter@corenova.com
  license:
    name: Apache-2.0
consumes:
  - application/json
produces:
  - application/json
paths:
  '/example-service:controller':
    get:
      description: |-
        The controller configuration represents an Example Service controller
        which manages multiple web server instances on behalf of subscribers.
      summary: View detail on controller
      deprecated: false
      responses:
        '200':
          description: Expected response of controller
          schema:
            description: |-
              The controller configuration represents an Example Service controller
              which manages multiple web server instances on behalf of subscribers.
            allOf:
              - $ref: '#/definitions/xos:service'
              - properties:
                  slice:
                    description: The Example Service uses XOS Slice to instantiate web server instances.
                    $ref: '#/definitions/xslice:slice'
                  web-server:
                    type: array
                    items:
                      description: |-
                        Each entry represents a unique instance of a web server managed by
                        this Example Service Controller.
                      type: object
                      properties:
                        id:
                          type: string
                          format: 'xtype:unique-identifier'
                        instance:
                          type: string
                          format: leafref
    put:
      summary: Update details on controller
      deprecated: false
      parameters:
        - name: controller
          in: body
          description: |-
            The controller configuration represents an Example Service controller
            which manages multiple web server instances on behalf of subscribers.
          schema:
            description: |-
              The controller configuration represents an Example Service controller
              which manages multiple web server instances on behalf of subscribers.
            allOf:
              - $ref: '#/definitions/xos:service'
              - properties:
                  slice:
                    description: The Example Service uses XOS Slice to instantiate web server instances.
                    $ref: '#/definitions/xslice:slice'
                  web-server:
                    type: array
                    items:
                      description: |-
                        Each entry represents a unique instance of a web server managed by
                        this Example Service Controller.
                      type: object
                      properties:
                        id:
                          type: string
                          format: 'xtype:unique-identifier'
                        instance:
                          type: string
                          format: leafref
          required: false
      responses:
        '200':
          description: Expected response of controller
          schema:
            description: |-
              The controller configuration represents an Example Service controller
              which manages multiple web server instances on behalf of subscribers.
            allOf:
              - $ref: '#/definitions/xos:service'
              - properties:
                  slice:
                    description: The Example Service uses XOS Slice to instantiate web server instances.
                    $ref: '#/definitions/xslice:slice'
                  web-server:
                    type: array
                    items:
                      description: |-
                        Each entry represents a unique instance of a web server managed by
                        this Example Service Controller.
                      type: object
                      properties:
                        id:
                          type: string
                          format: 'xtype:unique-identifier'
                        instance:
                          type: string
                          format: leafref
    patch:
      summary: Merge details on controller
      deprecated: false
      parameters:
        - name: controller
          in: body
          description: |-
            The controller configuration represents an Example Service controller
            which manages multiple web server instances on behalf of subscribers.
          schema:
            description: |-
              The controller configuration represents an Example Service controller
              which manages multiple web server instances on behalf of subscribers.
            allOf:
              - $ref: '#/definitions/xos:service'
              - properties:
                  slice:
                    description: The Example Service uses XOS Slice to instantiate web server instances.
                    $ref: '#/definitions/xslice:slice'
                  web-server:
                    type: array
                    items:
                      description: |-
                        Each entry represents a unique instance of a web server managed by
                        this Example Service Controller.
                      type: object
                      properties:
                        id:
                          type: string
                          format: 'xtype:unique-identifier'
                        instance:
                          type: string
                          format: leafref
          required: false
      responses:
        '200':
          description: Expected response of controller
          schema:
            description: |-
              The controller configuration represents an Example Service controller
              which manages multiple web server instances on behalf of subscribers.
            allOf:
              - $ref: '#/definitions/xos:service'
              - properties:
                  slice:
                    description: The Example Service uses XOS Slice to instantiate web server instances.
                    $ref: '#/definitions/xslice:slice'
                  web-server:
                    type: array
                    items:
                      description: |-
                        Each entry represents a unique instance of a web server managed by
                        this Example Service Controller.
                      type: object
                      properties:
                        id:
                          type: string
                          format: 'xtype:unique-identifier'
                        instance:
                          type: string
                          format: leafref
    delete:
      summary: Delete controller from example-service
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
  '/example-service:controller/slice':
    get:
      description: The Example Service uses XOS Slice to instantiate web server instances.
      summary: View detail on slice
      deprecated: false
      responses:
        '200':
          description: Expected response of slice
          schema:
            description: The Example Service uses XOS Slice to instantiate web server instances.
            $ref: '#/definitions/xslice:slice'
    put:
      summary: Update details on slice
      deprecated: false
      parameters:
        - name: slice
          in: body
          description: The Example Service uses XOS Slice to instantiate web server instances.
          schema:
            description: The Example Service uses XOS Slice to instantiate web server instances.
            $ref: '#/definitions/xslice:slice'
          required: false
      responses:
        '200':
          description: Expected response of slice
          schema:
            description: The Example Service uses XOS Slice to instantiate web server instances.
            $ref: '#/definitions/xslice:slice'
    patch:
      summary: Merge details on slice
      deprecated: false
      parameters:
        - name: slice
          in: body
          description: The Example Service uses XOS Slice to instantiate web server instances.
          schema:
            description: The Example Service uses XOS Slice to instantiate web server instances.
            $ref: '#/definitions/xslice:slice'
          required: false
      responses:
        '200':
          description: Expected response of slice
          schema:
            description: The Example Service uses XOS Slice to instantiate web server instances.
            $ref: '#/definitions/xslice:slice'
    delete:
      summary: Delete slice from controller
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
  '/example-service:controller/slice/policy':
    get:
      summary: View detail on policy
      deprecated: false
      responses:
        '200':
          description: Expected response of policy
          schema:
            type: object
            properties:
              max-instances:
                description: The maximum number of VMs that this slice is allowed to allocate
                type: integer
                format: uint16
              default-flavor:
                type: string
                format: leafref
              default-image:
                type: string
                format: leafref
              default-node:
                type: string
                format: leafref
              mount-data-sets:
                default: GenBank
                type: string
                format: string
              default-isolation:
                default: vm
                type: string
                format: 'xtype:isolation'
                enum:
                  - vm
                  - lxc
                  - hybrid
    put:
      summary: Update details on policy
      deprecated: false
      parameters:
        - name: policy
          in: body
          schema:
            type: object
            properties:
              max-instances:
                description: The maximum number of VMs that this slice is allowed to allocate
                type: integer
                format: uint16
              default-flavor:
                type: string
                format: leafref
              default-image:
                type: string
                format: leafref
              default-node:
                type: string
                format: leafref
              mount-data-sets:
                default: GenBank
                type: string
                format: string
              default-isolation:
                default: vm
                type: string
                format: 'xtype:isolation'
                enum:
                  - vm
                  - lxc
                  - hybrid
          required: false
      responses:
        '200':
          description: Expected response of policy
          schema:
            type: object
            properties:
              max-instances:
                description: The maximum number of VMs that this slice is allowed to allocate
                type: integer
                format: uint16
              default-flavor:
                type: string
                format: leafref
              default-image:
                type: string
                format: leafref
              default-node:
                type: string
                format: leafref
              mount-data-sets:
                default: GenBank
                type: string
                format: string
              default-isolation:
                default: vm
                type: string
                format: 'xtype:isolation'
                enum:
                  - vm
                  - lxc
                  - hybrid
    patch:
      summary: Merge details on policy
      deprecated: false
      parameters:
        - name: policy
          in: body
          schema:
            type: object
            properties:
              max-instances:
                description: The maximum number of VMs that this slice is allowed to allocate
                type: integer
                format: uint16
              default-flavor:
                type: string
                format: leafref
              default-image:
                type: string
                format: leafref
              default-node:
                type: string
                format: leafref
              mount-data-sets:
                default: GenBank
                type: string
                format: string
              default-isolation:
                default: vm
                type: string
                format: 'xtype:isolation'
                enum:
                  - vm
                  - lxc
                  - hybrid
          required: false
      responses:
        '200':
          description: Expected response of policy
          schema:
            type: object
            properties:
              max-instances:
                description: The maximum number of VMs that this slice is allowed to allocate
                type: integer
                format: uint16
              default-flavor:
                type: string
                format: leafref
              default-image:
                type: string
                format: leafref
              default-node:
                type: string
                format: leafref
              mount-data-sets:
                default: GenBank
                type: string
                format: string
              default-isolation:
                default: vm
                type: string
                format: 'xtype:isolation'
                enum:
                  - vm
                  - lxc
                  - hybrid
    delete:
      summary: Delete policy from slice
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
  '/example-service:controller/slice/scale':
    post:
      description: Adjust scale for slice(s)
      summary: Invokes scale in slice
      deprecated: false
      parameters:
        - name: 'scale:input'
          in: body
          schema: {}
          required: false
      responses:
        '200':
          description: Expected response of scale
          schema: {}
  '/example-service:controller/slice/credential':
    post:
      summary: Creates one or more new credential in credentials-list
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
          required: false
      responses:
        '200':
          description: Expected response for creating credential(s) in collection
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
    get:
      summary: List all credentials from credentials-list
      deprecated: false
      responses:
        '200':
          description: Expected response of credentials
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
    put:
      summary: Replace the entire credential collection
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
          required: false
      responses:
        '201':
          description: Expected response for replacing collection
    patch:
      summary: Merge items into the credential collection
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
          required: false
      responses:
        '201':
          description: Expected response for merging into collection
  '/example-service:controller/slice/credential/{token}':
    get:
      summary: View detail on credential
      deprecated: false
      responses:
        '200':
          description: Expected response of credential
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
    put:
      summary: Update details on credential
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
          required: false
      responses:
        '200':
          description: Expected response of credential
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
    patch:
      summary: Merge details on credential
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
          required: false
      responses:
        '200':
          description: Expected response of credential
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
    delete:
      summary: Delete credential from credentials-list
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
    parameters:
      - name: token
        in: path
        required: true
        description: A key uniquely identifying credential item
        type: string
        format: string
  '/example-service:controller/web-server':
    post:
      description: |-
        Each entry represents a unique instance of a web server managed by
        this Example Service Controller.
      summary: Creates one or more new web-server in controller
      deprecated: false
      parameters:
        - name: web-server
          in: body
          description: |-
            Each entry represents a unique instance of a web server managed by
            this Example Service Controller.
          schema:
            type: array
            items:
              description: |-
                Each entry represents a unique instance of a web server managed by
                this Example Service Controller.
              type: object
              properties:
                id:
                  type: string
                  format: 'xtype:unique-identifier'
                instance:
                  type: string
                  format: leafref
          required: false
      responses:
        '200':
          description: Expected response for creating web-server(s) in collection
          schema:
            type: array
            items:
              description: |-
                Each entry represents a unique instance of a web server managed by
                this Example Service Controller.
              type: object
              properties:
                id:
                  type: string
                  format: 'xtype:unique-identifier'
                instance:
                  type: string
                  format: leafref
    get:
      summary: List all web-servers from controller
      deprecated: false
      responses:
        '200':
          description: Expected response of web-servers
          schema:
            type: array
            items:
              description: |-
                Each entry represents a unique instance of a web server managed by
                this Example Service Controller.
              type: object
              properties:
                id:
                  type: string
                  format: 'xtype:unique-identifier'
                instance:
                  type: string
                  format: leafref
    put:
      summary: Replace the entire web-server collection
      deprecated: false
      parameters:
        - name: web-server
          in: body
          description: |-
            Each entry represents a unique instance of a web server managed by
            this Example Service Controller.
          schema:
            type: array
            items:
              description: |-
                Each entry represents a unique instance of a web server managed by
                this Example Service Controller.
              type: object
              properties:
                id:
                  type: string
                  format: 'xtype:unique-identifier'
                instance:
                  type: string
                  format: leafref
          required: false
      responses:
        '201':
          description: Expected response for replacing collection
    patch:
      summary: Merge items into the web-server collection
      deprecated: false
      parameters:
        - name: web-server
          in: body
          description: |-
            Each entry represents a unique instance of a web server managed by
            this Example Service Controller.
          schema:
            type: array
            items:
              description: |-
                Each entry represents a unique instance of a web server managed by
                this Example Service Controller.
              type: object
              properties:
                id:
                  type: string
                  format: 'xtype:unique-identifier'
                instance:
                  type: string
                  format: leafref
          required: false
      responses:
        '201':
          description: Expected response for merging into collection
  '/example-service:controller/web-server/{id}':
    get:
      description: |-
        Each entry represents a unique instance of a web server managed by
        this Example Service Controller.
      summary: View detail on web-server
      deprecated: false
      responses:
        '200':
          description: Expected response of web-server
          schema:
            description: |-
              Each entry represents a unique instance of a web server managed by
              this Example Service Controller.
            type: object
            properties:
              id:
                type: string
                format: 'xtype:unique-identifier'
              instance:
                type: string
                format: leafref
    put:
      summary: Update details on web-server
      deprecated: false
      parameters:
        - name: web-server
          in: body
          description: |-
            Each entry represents a unique instance of a web server managed by
            this Example Service Controller.
          schema:
            description: |-
              Each entry represents a unique instance of a web server managed by
              this Example Service Controller.
            type: object
            properties:
              id:
                type: string
                format: 'xtype:unique-identifier'
              instance:
                type: string
                format: leafref
          required: false
      responses:
        '200':
          description: Expected response of web-server
          schema:
            description: |-
              Each entry represents a unique instance of a web server managed by
              this Example Service Controller.
            type: object
            properties:
              id:
                type: string
                format: 'xtype:unique-identifier'
              instance:
                type: string
                format: leafref
    patch:
      summary: Merge details on web-server
      deprecated: false
      parameters:
        - name: web-server
          in: body
          description: |-
            Each entry represents a unique instance of a web server managed by
            this Example Service Controller.
          schema:
            description: |-
              Each entry represents a unique instance of a web server managed by
              this Example Service Controller.
            type: object
            properties:
              id:
                type: string
                format: 'xtype:unique-identifier'
              instance:
                type: string
                format: leafref
          required: false
      responses:
        '200':
          description: Expected response of web-server
          schema:
            description: |-
              Each entry represents a unique instance of a web server managed by
              this Example Service Controller.
            type: object
            properties:
              id:
                type: string
                format: 'xtype:unique-identifier'
              instance:
                type: string
                format: leafref
    delete:
      summary: Delete web-server from controller
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
    parameters:
      - name: id
        in: path
        required: true
        description: A key uniquely identifying web-server item
        type: string
        format: 'xtype:unique-identifier'
  '/example-service:controller/keypair':
    post:
      description: collection of public/private key pair(s)
      summary: Creates one or more new keypair in service
      deprecated: false
      parameters:
        - name: keypair
          in: body
          description: collection of public/private key pair(s)
          schema:
            type: array
            items:
              description: collection of public/private key pair(s)
              type: object
              properties:
                public:
                  type: string
                  format: string
                private:
                  type: string
                  format: string
          required: false
      responses:
        '200':
          description: Expected response for creating keypair(s) in collection
          schema:
            type: array
            items:
              description: collection of public/private key pair(s)
              type: object
              properties:
                public:
                  type: string
                  format: string
                private:
                  type: string
                  format: string
    get:
      summary: List all keypairs from service
      deprecated: false
      responses:
        '200':
          description: Expected response of keypairs
          schema:
            type: array
            items:
              description: collection of public/private key pair(s)
              type: object
              properties:
                public:
                  type: string
                  format: string
                private:
                  type: string
                  format: string
    put:
      summary: Replace the entire keypair collection
      deprecated: false
      parameters:
        - name: keypair
          in: body
          description: collection of public/private key pair(s)
          schema:
            type: array
            items:
              description: collection of public/private key pair(s)
              type: object
              properties:
                public:
                  type: string
                  format: string
                private:
                  type: string
                  format: string
          required: false
      responses:
        '201':
          description: Expected response for replacing collection
    patch:
      summary: Merge items into the keypair collection
      deprecated: false
      parameters:
        - name: keypair
          in: body
          description: collection of public/private key pair(s)
          schema:
            type: array
            items:
              description: collection of public/private key pair(s)
              type: object
              properties:
                public:
                  type: string
                  format: string
                private:
                  type: string
                  format: string
          required: false
      responses:
        '201':
          description: Expected response for merging into collection
  '/example-service:controller/keypair/{index}':
    get:
      description: collection of public/private key pair(s)
      summary: View detail on keypair
      deprecated: false
      responses:
        '200':
          description: Expected response of keypair
          schema:
            description: collection of public/private key pair(s)
            type: object
            properties:
              public:
                type: string
                format: string
              private:
                type: string
                format: string
    put:
      summary: Update details on keypair
      deprecated: false
      parameters:
        - name: keypair
          in: body
          description: collection of public/private key pair(s)
          schema:
            description: collection of public/private key pair(s)
            type: object
            properties:
              public:
                type: string
                format: string
              private:
                type: string
                format: string
          required: false
      responses:
        '200':
          description: Expected response of keypair
          schema:
            description: collection of public/private key pair(s)
            type: object
            properties:
              public:
                type: string
                format: string
              private:
                type: string
                format: string
    patch:
      summary: Merge details on keypair
      deprecated: false
      parameters:
        - name: keypair
          in: body
          description: collection of public/private key pair(s)
          schema:
            description: collection of public/private key pair(s)
            type: object
            properties:
              public:
                type: string
                format: string
              private:
                type: string
                format: string
          required: false
      responses:
        '200':
          description: Expected response of keypair
          schema:
            description: collection of public/private key pair(s)
            type: object
            properties:
              public:
                type: string
                format: string
              private:
                type: string
                format: string
    delete:
      summary: Delete keypair from service
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
    parameters:
      - name: index
        in: path
        required: true
        type: integer
        format: int64
        description: An index key identifying keypair item (may change over time)
  '/example-service:controller/attribute':
    post:
      description: backwards-compatible attribute association
      summary: Creates one or more new attribute in service
      deprecated: true
      parameters:
        - name: attribute
          in: body
          description: backwards-compatible attribute association
          schema:
            type: array
            items:
              description: backwards-compatible attribute association
              type: object
              properties:
                name:
                  type: string
                  format: string
                value:
                  type: string
                  format: string
          required: false
      responses:
        '200':
          description: Expected response for creating attribute(s) in collection
          schema:
            type: array
            items:
              description: backwards-compatible attribute association
              type: object
              properties:
                name:
                  type: string
                  format: string
                value:
                  type: string
                  format: string
    get:
      summary: List all attributes from service
      deprecated: true
      responses:
        '200':
          description: Expected response of attributes
          schema:
            type: array
            items:
              description: backwards-compatible attribute association
              type: object
              properties:
                name:
                  type: string
                  format: string
                value:
                  type: string
                  format: string
    put:
      summary: Replace the entire attribute collection
      deprecated: true
      parameters:
        - name: attribute
          in: body
          description: backwards-compatible attribute association
          schema:
            type: array
            items:
              description: backwards-compatible attribute association
              type: object
              properties:
                name:
                  type: string
                  format: string
                value:
                  type: string
                  format: string
          required: false
      responses:
        '201':
          description: Expected response for replacing collection
    patch:
      summary: Merge items into the attribute collection
      deprecated: true
      parameters:
        - name: attribute
          in: body
          description: backwards-compatible attribute association
          schema:
            type: array
            items:
              description: backwards-compatible attribute association
              type: object
              properties:
                name:
                  type: string
                  format: string
                value:
                  type: string
                  format: string
          required: false
      responses:
        '201':
          description: Expected response for merging into collection
  '/example-service:controller/attribute/{name}':
    get:
      description: backwards-compatible attribute association
      summary: View detail on attribute
      deprecated: true
      responses:
        '200':
          description: Expected response of attribute
          schema:
            description: backwards-compatible attribute association
            type: object
            properties:
              name:
                type: string
                format: string
              value:
                type: string
                format: string
    put:
      summary: Update details on attribute
      deprecated: true
      parameters:
        - name: attribute
          in: body
          description: backwards-compatible attribute association
          schema:
            description: backwards-compatible attribute association
            type: object
            properties:
              name:
                type: string
                format: string
              value:
                type: string
                format: string
          required: false
      responses:
        '200':
          description: Expected response of attribute
          schema:
            description: backwards-compatible attribute association
            type: object
            properties:
              name:
                type: string
                format: string
              value:
                type: string
                format: string
    patch:
      summary: Merge details on attribute
      deprecated: true
      parameters:
        - name: attribute
          in: body
          description: backwards-compatible attribute association
          schema:
            description: backwards-compatible attribute association
            type: object
            properties:
              name:
                type: string
                format: string
              value:
                type: string
                format: string
          required: false
      responses:
        '200':
          description: Expected response of attribute
          schema:
            description: backwards-compatible attribute association
            type: object
            properties:
              name:
                type: string
                format: string
              value:
                type: string
                format: string
    delete:
      summary: Delete attribute from service
      deprecated: true
      responses:
        '204':
          description: Expected response for delete
    parameters:
      - name: name
        in: path
        required: true
        description: A key uniquely identifying attribute item
        type: string
        format: string
  '/example-service:controller/subscriber':
    post:
      description: |-
        Each entry represents a subscriber of the service. Each unique service
        provider should augment this block with service specific
        attributes.
      summary: Creates one or more new subscriber in service
      deprecated: false
      parameters:
        - name: subscriber
          in: body
          description: |-
            Each entry represents a subscriber of the service. Each unique service
            provider should augment this block with service specific
            attributes.
          schema:
            type: array
            items:
              description: |-
                Each entry represents a subscriber of the service. Each unique service
                provider should augment this block with service specific
                attributes.
              allOf:
                - $ref: '#/definitions/xos:subscriber'
                - properties:
                    example-service-message:
                      type: string
                      format: string
          required: false
      responses:
        '200':
          description: Expected response for creating subscriber(s) in collection
          schema:
            type: array
            items:
              description: |-
                Each entry represents a subscriber of the service. Each unique service
                provider should augment this block with service specific
                attributes.
              allOf:
                - $ref: '#/definitions/xos:subscriber'
                - properties:
                    example-service-message:
                      type: string
                      format: string
    get:
      summary: List all subscribers from service
      deprecated: false
      responses:
        '200':
          description: Expected response of subscribers
          schema:
            type: array
            items:
              description: |-
                Each entry represents a subscriber of the service. Each unique service
                provider should augment this block with service specific
                attributes.
              allOf:
                - $ref: '#/definitions/xos:subscriber'
                - properties:
                    example-service-message:
                      type: string
                      format: string
    put:
      summary: Replace the entire subscriber collection
      deprecated: false
      parameters:
        - name: subscriber
          in: body
          description: |-
            Each entry represents a subscriber of the service. Each unique service
            provider should augment this block with service specific
            attributes.
          schema:
            type: array
            items:
              description: |-
                Each entry represents a subscriber of the service. Each unique service
                provider should augment this block with service specific
                attributes.
              allOf:
                - $ref: '#/definitions/xos:subscriber'
                - properties:
                    example-service-message:
                      type: string
                      format: string
          required: false
      responses:
        '201':
          description: Expected response for replacing collection
    patch:
      summary: Merge items into the subscriber collection
      deprecated: false
      parameters:
        - name: subscriber
          in: body
          description: |-
            Each entry represents a subscriber of the service. Each unique service
            provider should augment this block with service specific
            attributes.
          schema:
            type: array
            items:
              description: |-
                Each entry represents a subscriber of the service. Each unique service
                provider should augment this block with service specific
                attributes.
              allOf:
                - $ref: '#/definitions/xos:subscriber'
                - properties:
                    example-service-message:
                      type: string
                      format: string
          required: false
      responses:
        '201':
          description: Expected response for merging into collection
  '/example-service:controller/subscriber/{id}':
    get:
      description: |-
        Each entry represents a subscriber of the service. Each unique service
        provider should augment this block with service specific
        attributes.
      summary: View detail on subscriber
      deprecated: false
      responses:
        '200':
          description: Expected response of subscriber
          schema:
            description: |-
              Each entry represents a subscriber of the service. Each unique service
              provider should augment this block with service specific
              attributes.
            allOf:
              - $ref: '#/definitions/xos:subscriber'
              - properties:
                  example-service-message:
                    type: string
                    format: string
    put:
      summary: Update details on subscriber
      deprecated: false
      parameters:
        - name: subscriber
          in: body
          description: |-
            Each entry represents a subscriber of the service. Each unique service
            provider should augment this block with service specific
            attributes.
          schema:
            description: |-
              Each entry represents a subscriber of the service. Each unique service
              provider should augment this block with service specific
              attributes.
            allOf:
              - $ref: '#/definitions/xos:subscriber'
              - properties:
                  example-service-message:
                    type: string
                    format: string
          required: false
      responses:
        '200':
          description: Expected response of subscriber
          schema:
            description: |-
              Each entry represents a subscriber of the service. Each unique service
              provider should augment this block with service specific
              attributes.
            allOf:
              - $ref: '#/definitions/xos:subscriber'
              - properties:
                  example-service-message:
                    type: string
                    format: string
    patch:
      summary: Merge details on subscriber
      deprecated: false
      parameters:
        - name: subscriber
          in: body
          description: |-
            Each entry represents a subscriber of the service. Each unique service
            provider should augment this block with service specific
            attributes.
          schema:
            description: |-
              Each entry represents a subscriber of the service. Each unique service
              provider should augment this block with service specific
              attributes.
            allOf:
              - $ref: '#/definitions/xos:subscriber'
              - properties:
                  example-service-message:
                    type: string
                    format: string
          required: false
      responses:
        '200':
          description: Expected response of subscriber
          schema:
            description: |-
              Each entry represents a subscriber of the service. Each unique service
              provider should augment this block with service specific
              attributes.
            allOf:
              - $ref: '#/definitions/xos:subscriber'
              - properties:
                  example-service-message:
                    type: string
                    format: string
    delete:
      summary: Delete subscriber from service
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
    parameters:
      - name: id
        in: path
        required: true
        description: A key uniquely identifying subscriber item
        type: string
        format: 'xtype:unique-identifier'
  '/example-service:controller/credential':
    post:
      summary: Creates one or more new credential in credentials-list
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
          required: false
      responses:
        '200':
          description: Expected response for creating credential(s) in collection
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
    get:
      summary: List all credentials from credentials-list
      deprecated: false
      responses:
        '200':
          description: Expected response of credentials
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
    put:
      summary: Replace the entire credential collection
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
          required: false
      responses:
        '201':
          description: Expected response for replacing collection
    patch:
      summary: Merge items into the credential collection
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: array
            items:
              type: object
              properties:
                token:
                  type: string
                  format: string
                password:
                  type: string
                  format: 'meta:password'
                user:
                  type: string
                  format: 'xtype:unique-identifier'
                role:
                  default: user
                  type: string
                  format: 'xtype:access-role'
                  enum:
                    - admin
                    - staff
                    - user
          required: false
      responses:
        '201':
          description: Expected response for merging into collection
  '/example-service:controller/credential/{token}':
    get:
      summary: View detail on credential
      deprecated: false
      responses:
        '200':
          description: Expected response of credential
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
    put:
      summary: Update details on credential
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
          required: false
      responses:
        '200':
          description: Expected response of credential
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
    patch:
      summary: Merge details on credential
      deprecated: false
      parameters:
        - name: credential
          in: body
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
          required: false
      responses:
        '200':
          description: Expected response of credential
          schema:
            type: object
            properties:
              token:
                type: string
                format: string
              password:
                type: string
                format: 'meta:password'
              user:
                type: string
                format: 'xtype:unique-identifier'
              role:
                default: user
                type: string
                format: 'xtype:access-role'
                enum:
                  - admin
                  - staff
                  - user
    delete:
      summary: Delete credential from credentials-list
      deprecated: false
      responses:
        '204':
          description: Expected response for delete
    parameters:
      - name: token
        in: path
        required: true
        description: A key uniquely identifying credential item
        type: string
        format: string
definitions:
  'xslice:slice':
    description: A slice is a logically centralized container for network and compute resources
    allOf:
      - $ref: '#/definitions/xos:provider'
      - properties:
          slice-url:
            description: A URL describing the purpose of this slice
            type: string
            format: 'inet:uri'
          network:
            description: The network that the slice uses to connect to other slices and to the Internet.
            default: none
            type: string
            format: enumeration
            enum:
              - none
              - host
              - bridged
              - noauto
          creator:
            type: string
            format: leafref
          service:
            description: The service that runs in this slice
          instances:
            type: array
            items:
              type: string
              format: leafref
          networks:
            type: array
            items:
              type: string
              format: leafref
          ports:
            type: array
            items:
              description: The ports to be exposed for other slices to connect to
              type: integer
              format: uint16
          tags:
            type: array
            items:
              type: string
              format: string
          policy:
            type: object
            properties:
              max-instances:
                description: The maximum number of VMs that this slice is allowed to allocate
                type: integer
                format: uint16
              default-flavor:
                type: string
                format: leafref
              default-image:
                type: string
                format: leafref
              default-node:
                type: string
                format: leafref
              mount-data-sets:
                default: GenBank
                type: string
                format: string
              default-isolation:
                default: vm
                type: string
                format: 'xtype:isolation'
                enum:
                  - vm
                  - lxc
                  - hybrid
  'xos:provider':
    allOf:
      - $ref: '#/definitions/xos:tenant'
      - $ref: '#/definitions/xos:credentials-list'
  'xos:tenant':
    type: object
    required:
      - id
    properties:
      id:
        type: string
        format: 'xtype:unique-identifier'
      name:
        type: string
        format: string
      kind:
        type: string
        format: identityref
      description:
        type: string
        format: 'meta:description'
      enabled:
        default: 'true'
        type: boolean
        format: boolean
      record:
        $ref: '#/definitions/xos:record'
  'xos:record':
    description: Synchronizer-specific properties for model entities
    type: object
    properties:
      created:
        type: string
        format: 'yang:date-and-time'
      updated:
        type: string
        format: 'yang:date-and-time'
      enacted:
        type: string
        format: 'yang:date-and-time'
      policed:
        type: string
        format: 'yang:date-and-time'
      writable:
        default: 'true'
        type: boolean
        format: boolean
      locked:
        default: 'false'
        type: boolean
        format: boolean
      deleted:
        default: 'false'
        type: boolean
        format: boolean
      dirty:
        default: 'false'
        type: boolean
        format: boolean
      sync:
        type: object
        properties:
          progress:
            type: string
            format: enumeration
            enum:
              - provisioning
          disabled:
            default: 'false'
            type: boolean
            format: boolean
          enforced:
            default: 'true'
            type: boolean
            format: boolean
          policy:
            type: array
            items:
              type: object
  'xos:credentials-list':
    type: object
    properties:
      credential:
        type: array
        items:
          type: object
          properties:
            token:
              type: string
              format: string
            password:
              type: string
              format: 'meta:password'
            user:
              type: string
              format: 'xtype:unique-identifier'
            role:
              default: user
              type: string
              format: 'xtype:access-role'
              enum:
                - admin
                - staff
                - user
  'xos:service':
    allOf:
      - $ref: '#/definitions/xos:provider'
      - properties:
          view-url:
            type: string
            format: 'inet:uri'
          icon-url:
            type: string
            format: 'inet:uri'
          published:
            default: 'true'
            type: boolean
            format: boolean
          service-specific-id:
            type: string
            format: 'xtype:unique-identifier'
          keypair:
            type: array
            items:
              description: collection of public/private key pair(s)
              type: object
              properties:
                public:
                  type: string
                  format: string
                private:
                  type: string
                  format: string
          attribute:
            type: array
            items:
              description: backwards-compatible attribute association
              type: object
              properties:
                name:
                  type: string
                  format: string
                value:
                  type: string
                  format: string
          subscriber:
            type: array
            items:
              description: |-
                Each entry represents a subscriber of the service. Each unique service
                provider should augment this block with service specific
                attributes.
              $ref: '#/definitions/xos:subscriber'
  'xos:subscriber':
    allOf:
      - $ref: '#/definitions/xos:tenant'
      - properties:
          connectivity:
            default: na
            type: string
            format: enumeration
            enum:
              - public
              - private
              - private-unidirectional
              - na
